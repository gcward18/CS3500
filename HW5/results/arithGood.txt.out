TOKEN: LPAREN    LEXEME: (
TOKEN: MULT      LEXEME: *
ARITH_OP -> *
BIN_OP -> ARITH_OP
TOKEN: INTCONST  LEXEME: 10
CONST -> INTCONST
10 -> 10
EXPR -> CONST
TOKEN: LPAREN    LEXEME: (
TOKEN: ADD       LEXEME: +
ARITH_OP -> +
BIN_OP -> ARITH_OP
TOKEN: LPAREN    LEXEME: (
TOKEN: SUB       LEXEME: -
ARITH_OP -> -
BIN_OP -> ARITH_OP
TOKEN: INTCONST  LEXEME: 5
CONST -> INTCONST
5 -> 5
EXPR -> CONST
TOKEN: INTCONST  LEXEME: 2
CONST -> INTCONST
2 -> 2
EXPR -> CONST
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: INTCONST  LEXEME: 3
CONST -> INTCONST
3 -> 3
EXPR -> CONST
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
START -> EXPR

---- Completed parsing ----

